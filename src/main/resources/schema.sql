CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    VARCHAR(255) NOT NULL,
    email   VARCHAR(512) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
    request_id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description  VARCHAR(512) NOT NULL,
    user_id      BIGINT NOT NULL,
    created      TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT NOW(),
    CONSTRAINT pk_request PRIMARY KEY (request_id),
    CONSTRAINT fk_request_user FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
    item_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255) NOT NULL,
    description VARCHAR(512) NOT NULL,
    is_available BOOLEAN NOT NULL DEFAULT TRUE,
    user_id     BIGINT NOT NULL,
    request_id  BIGINT,
    CONSTRAINT pk_item PRIMARY KEY (item_id),
    CONSTRAINT fk_item_user FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT fk_item_request FOREIGN KEY (request_id) REFERENCES requests (request_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS bookings (
    booking_id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    user_id     BIGINT NOT NULL,
    item_id     BIGINT NOT NULL,
    status      VARCHAR(32) NOT NULL,
    CONSTRAINT pk_booking PRIMARY KEY (booking_id),
    CONSTRAINT fk_booking_user FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT fk_booking_item FOREIGN KEY (item_id) REFERENCES items (item_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
     comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
     text       VARCHAR(512) NOT NULL,
     user_id    BIGINT NOT NULL,
     item_id    BIGINT NOT NULL,
     created    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
     CONSTRAINT pk_comment PRIMARY KEY (comment_id),
     CONSTRAINT fk_comment_user FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
     CONSTRAINT fk_comment_item FOREIGN KEY (item_id) REFERENCES items (item_id) ON DELETE CASCADE
);